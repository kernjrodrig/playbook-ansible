# Generate dynamic variables for onboarding workflow
# host_name -> target host to execute playbook
# application_name -> application name to be used for host_group, web application, management zone, alerting profile, notification, and dashboard
# application_url_pattern -> URL pattern for web application detection rule
# application_owner_email -> email address of application owner
---
-
  hosts: "{{ host_name }}"
  name: "Onboarding Workflow Set Stats"
  tasks:
    -
      name: "generate web application detection rule uuid"
      set_stats:
        data:
          dt_detection_rule_uuid: "{{ 9999999999999999999999 | random | to_uuid }}" # generates a random number and converts to UUID
      when: dt_detection_rule_uuid is undefined
    -
      name: "generate management zone 64 bit integer id"
      set_stats:
        data:
          dt_mz_64id: "{{ 999999999999999999 | random(100000000000000000, 10) }}" # Generate a random 64 bit integer
      when: dt_mz_64id is undefined
    -
      name: "generate alerting profile uuid"
      set_stats:
        data:
          dt_ap_uuid: "{{ 9999999999999999999999 | random | to_uuid }}" # generates a random number and converts to UUID
      when: dt_ap_uuid is undefined
    -
      name: "generate problem notification uuid"
      set_stats:
        data:
          dt_notification_uuid: '{{ 9999999999999999999999 | random | to_uuid }}' # generates a random number and converts to UUID
      when: dt_notification_uuid is undefined
    -
      name: "generate dashboard uuid"
      set_stats:
        data:
          dt_dashboard_uuid: '{{ 9999999999999999999999 | random | to_uuid }}' # generates a random number and converts to UUID
      when: dt_dashboard_uuid is undefined
    -
      name: "set dynatrace host group"
      set_stats:
        data:
          dt_host_group: "{{ application_name }}"
      when: application_name is defined and dt_host_group is undefined
    -
      name: "set management zone name"
      set_stats:
        data:
          dt_mz_name: "{{ application_name }}"
      when: application_name is defined and dt_mz_name is undefined
    -
      name: "set web application name"
      set_stats:
        data:
          dt_web_application_name: "{{ application_name }}"
      when: application_name is defined and dt_web_application_name is undefined
    -
      name: "set dashboard name"
      set_stats:
        data:
          dt_dashboard_name: "{{ application_name }} application overview"
      when: application_name is defined and dt_dashboard_name is undefined
    -
      name: "set problem notification name"
      set_stats:
        data:
          dt_notification_name: "{{ application_name }}"
      when: application_name is defined and dt_notification_name is undefined
    -
      name: "set web application url pattern"
      set_stats:
        data:
          dt_url_pattern: "{{ application_url_pattern }}"
      when: application_url_pattern is defined and dt_url_pattern is undefined
    -
      name: "set notification email recipient"
      set_stats:
        data:
          dt_email_receiver: "{{ application_owner_email }}"
      when: application_owner_email is defined and dt_email_receiver is undefined
    -
      name: "set dashboard owner"
      set_stats:
        data:
          dt_owner_id: "{{ application_owner_email }}"
      when: application_owner_email is defined and dt_owner_id is undefined
