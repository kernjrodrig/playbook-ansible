---
- name: leapp_firewalld_unsupported_tftp_client | Remove unsupported tftp-client service from firewalld
  vars:
    entry_title: Firewalld Service tftp-client Is Unsupported
    leapp_report_location: /var/log/leapp/leapp-report.json
  when: ansible_distribution == 'RedHat' and ansible_distribution_major_version|int == 8
  block:
    - name: leapp_firewalld_unsupported_tftp_client | Check that the leapp-report.json exists
      ansible.builtin.stat:
        path: "{{ leapp_report_location }}"
      register: leapp_report_stat

    - name: leapp_firewalld_unsupported_tftp_client | End play if no leapp report exists
      ansible.builtin.set_fact:
        leapp_report_missing: true
      when: leapp_report_stat.stat.exists is false
      failed_when: leapp_report_stat.stat.exists is false

    - name: leapp_firewalld_unsupported_tftp_client | Read leapp report
      ansible.builtin.slurp:
        src: "{{ leapp_report_location }}"
      register: leappreport

    - name: leapp_firewalld_unsupported_tftp_client | Parse leapp report to json
      ansible.builtin.set_fact:
        leappreportdata: "{{ leappreport.content | b64decode | from_json }}"

    - name: leapp_firewalld_unsupported_tftp_client | Find matching entries
      ansible.builtin.set_fact:
        summary: "{{ item.summary }}"
      loop: "{{ leappreportdata.entries }}"
      when: item.title is match(entry_title) and (item.summary | length > 0)

    - name: leapp_firewalld_unsupported_tftp_client | End execution of playbook if no entry found in leapp report
      ansible.builtin.set_fact:
        leapp_report_missing: true
      failed_when: summary is not defined

    - name: leapp_firewalld_unsupported_tftp_client | Remove the service from zones and policies
      block:
        - name: leapp_firewalld_unsupported_tftp_client | List all firewalld zones
          ansible.builtin.command: firewall-cmd --get-zones
          register: all_zones
          changed_when: false

        - name: leapp_firewalld_unsupported_tftp_client | Split the zones into a list
          ansible.builtin.set_fact:
            zone_list: "{{ all_zones.stdout | split }}"

        - name: leapp_firewalld_unsupported_tftp_client | Remove the service from zones
          ansible.builtin.command: firewall-cmd --permanent --zone={{ item }} --remove-service=tftp-client
          loop: "{{ zone_list }}"
          failed_when: true
          changed_when: false

        - name: leapp_firewalld_unsupported_tftp_client | Remove the service from policies
          ansible.builtin.command: firewall-cmd --permanent --remove-service=tftp-client
          failed_when: true
          changed_when: false

    - name: leapp_firewalld_unsupported_tftp_client | Remove the rich rules
      block:
        - name: leapp_firewalld_unsupported_tftp_client | List all rich rules
          ansible.builtin.command: firewall-cmd --list-rich-rules
          register: rich_rules
          changed_when: false

        - name: leapp_firewalld_unsupported_tftp_client | Iterate through rich rules and remove tftp-client
          ansible.builtin.command: firewall-cmd --permanent --remove-rich-rule '{{ item }}'
          loop: "{{ rich_rules.stdout_lines }}"
          failed_when: true
          when: "'tftp-client' in item"
          changed_when: true

    - name: leapp_firewalld_unsupported_tftp_client | Reload firewalld to apply changes
      ansible.builtin.service:
        name: firewalld
        state: reloaded

  rescue:
    - name: leapp_firewalld_unsupported_tftp_client | Continue when leapp report is missing
      ansible.builtin.debug:
        msg: "Leapp report missing or did not contain any matches. Skipping this task."
      when: leapp_report_missing is defined and leapp_report_missing is true

...
