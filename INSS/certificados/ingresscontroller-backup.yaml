apiVersion: operator.openshift.io/v1
kind: IngressController
metadata:
    creationTimestamp: '2025-04-15T16:52:24Z'
    finalizers:
    - ingresscontroller.operator.openshift.io/finalizer-ingresscontroller
    generation: 4
    managedFields:
    -   apiVersion: operator.openshift.io/v1
        fieldsType: FieldsV1
        fieldsV1:
            f:spec:
                .: {}
                f:endpointPublishingStrategy:
                    .: {}
                    f:type: {}
                f:httpEmptyRequestsPolicy: {}
                f:nodePlacement:
                    .: {}
                    f:nodeSelector: {}
                f:replicas: {}
        manager: cluster-bootstrap
        operation: Update
        time: '2025-04-15T16:52:24Z'
    -   apiVersion: operator.openshift.io/v1
        fieldsType: FieldsV1
        fieldsV1:
            f:metadata:
                f:finalizers:
                    .: {}
                    v:"ingresscontroller.operator.openshift.io/finalizer-ingresscontroller": {}
            f:spec:
                f:clientTLS:
                    .: {}
                    f:clientCA:
                        .: {}
                        f:name: {}
                    f:clientCertificatePolicy: {}
                f:httpCompression: {}
                f:httpErrorCodePages:
                    .: {}
                    f:name: {}
                f:tuningOptions:
                    .: {}
                    f:reloadInterval: {}
                f:unsupportedConfigOverrides: {}
        manager: Go-http-client
        operation: Update
        time: '2025-04-15T17:04:01Z'
    -   apiVersion: operator.openshift.io/v1
        fieldsType: FieldsV1
        fieldsV1:
            f:spec:
                f:defaultCertificate: {}
        manager: kubectl-patch
        operation: Update
        time: '2025-04-16T02:57:23Z'
    -   apiVersion: operator.openshift.io/v1
        fieldsType: FieldsV1
        fieldsV1:
            f:status:
                .: {}
                f:availableReplicas: {}
                f:conditions: {}
                f:domain: {}
                f:endpointPublishingStrategy:
                    .: {}
                    f:hostNetwork:
                        .: {}
                        f:httpPort: {}
                        f:httpsPort: {}
                        f:protocol: {}
                        f:statsPort: {}
                    f:type: {}
                f:observedGeneration: {}
                f:selector: {}
                f:tlsProfile:
                    .: {}
                    f:ciphers: {}
                    f:minTLSVersion: {}
        manager: Go-http-client
        operation: Update
        subresource: status
        time: '2025-04-16T02:59:08Z'
    name: default
    namespace: openshift-ingress-operator
    resourceVersion: '383553'
    uid: 30797288-0da4-4f58-906c-1adb8cf57d77
spec:
    clientTLS:
        clientCA:
            name: ''
        clientCertificatePolicy: ''
    defaultCertificate:
        name: ingress-tls-secret
    endpointPublishingStrategy:
        type: HostNetwork
    httpCompression: {}
    httpEmptyRequestsPolicy: Respond
    httpErrorCodePages:
        name: ''
    nodePlacement:
        nodeSelector:
            matchLabels:
                node-role.kubernetes.io/worker: ''
    replicas: 1
    tuningOptions:
        reloadInterval: 0s
    unsupportedConfigOverrides: null
status:
    availableReplicas: 1
    conditions:
    -   lastTransitionTime: '2025-04-15T17:04:01Z'
        reason: Valid
        status: 'True'
        type: Admitted
    -   lastTransitionTime: '2025-04-15T17:04:21Z'
        message: The deployment has Available status condition set to True
        reason: DeploymentAvailable
        status: 'True'
        type: DeploymentAvailable
    -   lastTransitionTime: '2025-04-15T17:04:02Z'
        message: Minimum replicas requirement is met
        reason: DeploymentMinimumReplicasMet
        status: 'True'
        type: DeploymentReplicasMinAvailable
    -   lastTransitionTime: '2025-04-16T02:59:08Z'
        message: All replicas are available
        reason: DeploymentReplicasAvailable
        status: 'True'
        type: DeploymentReplicasAllAvailable
    -   lastTransitionTime: '2025-04-16T02:59:08Z'
        message: Deployment is not actively rolling out
        reason: DeploymentNotRollingOut
        status: 'False'
        type: DeploymentRollingOut
    -   lastTransitionTime: '2025-04-15T17:04:02Z'
        message: The configured endpoint publishing strategy does not include a managed
            load balancer
        reason: EndpointPublishingStrategyExcludesManagedLoadBalancer
        status: 'False'
        type: LoadBalancerManaged
    -   lastTransitionTime: '2025-04-15T17:04:02Z'
        message: LoadBalancer is not progressing
        reason: LoadBalancerNotProgressing
        status: 'False'
        type: LoadBalancerProgressing
    -   lastTransitionTime: '2025-04-15T17:04:02Z'
        message: No DNS zones are defined in the cluster dns config.
        reason: NoDNSZones
        status: 'False'
        type: DNSManaged
    -   lastTransitionTime: '2025-04-15T17:04:21Z'
        status: 'True'
        type: Available
    -   lastTransitionTime: '2025-04-16T02:59:08Z'
        status: 'False'
        type: Progressing
    -   lastTransitionTime: '2025-04-15T17:11:58Z'
        status: 'False'
        type: Degraded
    -   lastTransitionTime: '2025-04-15T17:04:02Z'
        message: IngressController is upgradeable.
        reason: Upgradeable
        status: 'True'
        type: Upgradeable
    -   lastTransitionTime: '2025-04-15T17:04:02Z'
        message: No evaluation condition is detected.
        reason: NoEvaluationCondition
        status: 'False'
        type: EvaluationConditionsDetected
    -   lastTransitionTime: '2025-04-15T17:11:58Z'
        message: Canary route checks for the default ingress controller are successful
        reason: CanaryChecksSucceeding
        status: 'True'
        type: CanaryChecksSucceeding
    domain: apps.cluster-bmktm-1.dynamic.redhatworkshops.io
    endpointPublishingStrategy:
        hostNetwork:
            httpPort: 80
            httpsPort: 443
            protocol: TCP
            statsPort: 1936
        type: HostNetwork
    observedGeneration: 4
    selector: ingresscontroller.operator.openshift.io/deployment-ingresscontroller=default
    tlsProfile:
        ciphers:
        - ECDHE-ECDSA-AES128-GCM-SHA256
        - ECDHE-RSA-AES128-GCM-SHA256
        - ECDHE-ECDSA-AES256-GCM-SHA384
        - ECDHE-RSA-AES256-GCM-SHA384
        - ECDHE-ECDSA-CHACHA20-POLY1305
        - ECDHE-RSA-CHACHA20-POLY1305
        - DHE-RSA-AES128-GCM-SHA256
        - DHE-RSA-AES256-GCM-SHA384
        - TLS_AES_128_GCM_SHA256
        - TLS_AES_256_GCM_SHA384
        - TLS_CHACHA20_POLY1305_SHA256
        minTLSVersion: VersionTLS12
